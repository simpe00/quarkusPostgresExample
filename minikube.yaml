apiVersion: v1
items:
  - apiVersion: v1
    kind: Namespace
    metadata:
      name: quarkus
  - apiVersion: v1
    kind: Service
    metadata:
      namespace: quarkus
      name: postgresdb
    spec:
      ports:
        - name: "5432"
          port: 5432
          targetPort: 5432
      selector:
        service: db
    status:
      loadBalancer: {}
  - apiVersion: v1
    kind: Service
    metadata:
      namespace: quarkus
      name: quarkus-service
    spec:
      ports:
        - name: "8080"
          port: 8080
          targetPort: 8080
          nodePort: 30080
      selector:
        service: quarkus-service
      type: NodePort
    status:
      loadBalancer: {}
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      namespace: quarkus
      name: postgresdb
    spec:
      replicas: 1
      selector:
        matchLabels:
          service: db
      strategy:
        type: Recreate
      template:
        metadata:
          labels:
            service: db
        spec:
          containers:
            - env:
                - name: POSTGRES_DB
                  value: quarkusdb
                - name: POSTGRES_PASSWORD
                  value: postgres
                - name: POSTGRES_USER
                  value: postgres
              image: postgres
              name: postgresdb
              ports:
                - containerPort: 5432
              resources: {}
              volumeMounts:
                - mountPath: /var/lib/postgresql/data/
                  name: database-data
          restartPolicy: Always
          volumes:
            - name: database-data
              persistentVolumeClaim:
                claimName: database-data
    status: {}
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      namespace: quarkus
      labels:
        service: database-data
      name: database-data
    spec:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: 100Mi
    status: {}
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      namespace: quarkus
      name: quarkus-service
    spec:
      replicas: 1
      selector:
        matchLabels:
          service: quarkus-service
      strategy: {}
      template:
        metadata:
          labels:
            service: quarkus-service
        spec:
          containers:
            - env:
                - name: QUARKUS_DATASOURCE_JDBC_URL
                  value: jdbc:postgresql://postgresdb:5432/quarkusdb
              image: java/javaexample:jvm
              name: javaexample
              ports:
                - containerPort: 8080
              resources: {}
              imagePullPolicy: IfNotPresent
          restartPolicy: Always
    status: {}
kind: List
metadata: {}

